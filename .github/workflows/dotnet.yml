# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      
    - name: ðŸ“¦ Setup Dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: ðŸ“¦ Restore .NET workloads
      run: dotnet workload restore 
          
    - name: ðŸ“¦ Dotnet Restore
      run: dotnet restore
      
    - name: ðŸ“¦ Dotnet Build
      run: dotnet build --no-restore
      
    - name: ðŸ”§ Setup Cache Folder
      run: mkdir -p ~/image-cache
    
#    - name: ðŸ”§ Try Get Cache
#      id: image-cache
#      uses: actions/cache@v4
#      with:
#        path: ~/image-cache
#        key: image-cache-${{ runner.os }}
#
#    - name: ðŸ”§ If Cache miss
#      if: steps.image-cache.outputs.cache-hit != 'true'
#      run: |
#        docker pull mcr.microsoft.com/mssql/server:2019-latest
#        docker save -o ~/image-cache/mssql.tar mcr.microsoft.com/mssql/server:2019-latest
#  
#    - name: ðŸ”§ If Cache hit
#      if: steps.image-cache.outputs.cache-hit == 'true'
#      run: docker load -i ~/image-cache/mssql.tar
    
    - name: ðŸ¤ž Dotnet Test
      run: dotnet test --no-build --verbosity normal
